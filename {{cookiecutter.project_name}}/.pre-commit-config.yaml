{%- if cookiecutter.use_pre_commit %}
---
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: trailing-whitespace
        files: ".+\\.py$"
      - id: end-of-file-fixer
  - repo: https://github.com/deployed/pre_ticket
    rev: 1.0.1
    hooks:
      - id: pre_ticket
        language_version: python3.10
        stages: [commit-msg]
        args: ['--regex=(?P<ticket>[0-9]+)_.*']
  - repo: https://github.com/pycqa/flake8
    rev: 3.9.2
    hooks:
      - id: flake8
        additional_dependencies: [
          'flake8-comprehensions==3.10.1',
          'flake8-debugger==4.1.2',
          'flake8-django==1.1.5',
          'flake8-bugbear==22.10.27',
          'flake8-logging-format==0.8.1',
          'flake8-use-pathlib==0.3.0',
        ]
        entry: flake8 --config .flake8
  - repo: https://github.com/PyCQA/isort
    rev: 5.11.5
    hooks:
      - id: isort
  - repo: https://github.com/ambv/black
    rev: 23.1.0
    hooks:
      - id: black
        language_version: python3.10
  - repo: local
    hooks:
      - id: migrations-check
        language: system
        name: Check for uncreated migrations
        entry: python manage.py makemigrations --check --dry-run
        files: "(models\\.py$|(migrations/.+\\.py))"
        pass_filenames: false
        stages: [ commit ]
        require_serial: true
  - repo: local
    hooks:
      - id: mypy-check
        language: system
        name: Check for mypy
        entry: bash -c 'mypy {{ cookiecutter.project_name }}'
        stages: [ commit ]
        files: ".+\\.py$"
        require_serial: true
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.2.0
    hooks:
      - id: pyupgrade
        args: ["--py310-plus"]
  - repo: https://github.com/adamchainz/django-upgrade
    rev: 1.11.0
    hooks:
    -   id: django-upgrade
        language_version: python3.10
        args: ["--target-version", "4.2"]
{%- endif %}
